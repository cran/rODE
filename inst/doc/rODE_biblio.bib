% Encoding: UTF-8

@Book{Atkinson2009,
  author    = {Kendall Atkinson and Weimin Han and David E. Stewart},
  title     = {Numerical Solution of Ordinary Differential Equations},
  year      = {2009},
  publisher = {Wiley},
  isbn      = {978-0-470-04294-6},
}

@Book{Gould2017,
  author    = {Harvey Gould and Jan Tobochnik and Wolfgang Christian},
  title     = {An Introduction to Computer Simulation Methods: Applications To Physical Systems},
  year      = {2017},
  publisher = {CreateSpace Independent Publishing Platform},
  isbn      = {978-1974427475},
}

@Book{Nobles1974,
  author    = {Melvin A. Nobles},
  title     = {Using the Computer to Solve Petroleum Engineering Problems},
  year      = {1974},
  publisher = {Gulf Publishing Co},
  isbn      = {978-0872018860},
}

@Article{Sincovec1975,
  author    = {R.F. Sincovec},
  title     = {Numerical Reservoir Simulation Using an Ordinary-Differential-Equations Integrator},
  journal   = {Society of Petroleum Engineers Journal},
  year      = {1975},
  volume    = {15},
  number    = {03},
  month     = {jun},
  pages     = {255--264},
  doi       = {10.2118/5104-pa},
  publisher = {Society of Petroleum Engineers ({SPE})},
}

@Thesis{IMM2013-06607,
  author      = {Tobias Ritschel},
  title       = {Numerical Methods For Solution of Diﬀerential Equations},
  type        = {candthesis},
  institution = {Technical University of Denmark, Department of Applied Mathematics and Computer Science},
  year        = {2013},
  note        = {DTU supervisor: John Bagterp Jørgensen, jbjo@dtu.dk, DTU Compute},
  pages       = {224},
  url         = {http://www.compute.dtu.dk/English.aspx},
  abstract    = {Purpose of Thesis
The purpose of my B.Sc. thesis was to implement a Runge-Kutta Toolbox in both C and Matlab. The specific goals were the following.
Implementation of Runge-Kutta Methods
Implementation of MPI Routine for Parallel Simulations
Comparison of Simulation Times in C and Matlab
 
Runge-Kutta Methods
Runge-Kutta methods are used for obtaining approximate solutions to ordinary differential equations. There are several classes of Runge-Kutta methods with different properties. This project treats five Runge-Kutta methods which are Explicit Runge-Kutta methods (ERK) and Explicitly Singly Diagonally Implicit Runge-Kutta methods (ESDIRK). The five methods treated and compared are
Explicit or Forward Euler method (RK1)
The Classical Runge-Kutta method (RK4)
The Runge-Kutta-Fehlberg method (RKF45)
The Dormand-Prince method (DOPRI54)
ESDIRK23
 
Parallel Simulations
The thesis presents an example of use for the Runge-Kutta methods which is simulation of production of biomass using different control strategies. In this example, some parameters in the model of the biomass production may be subject to measurement errors. Carrying out simulations for pertubated parameter sets to allows for exaimation of the sensitivity to these pertubations. This is examined for different control strategies.
 
These simulations are independent of each other and are thus perfectly fit for parallel simulation. The thesis examines the effectivity of Matlabs implementation of parallel simulation and two implementations of parallel simulations in C using the Message Parsing Interface (MPI).
 
Comparison of Simulation Times in C and Matlab
Simulation times are compared for the biomass production example mentioned above. The comparison includes both sequential and parallel simulations and for the example described above, it shows that simulations in C are carried out between 80 and 300 times faster, compared to Matlab.},
}

@Article{Kimura2009,
  author        = {Kimura, Toshinori},
  title         = {On dormand-prince method},
  journal       = {Retrieved April},
  year          = {2009},
  volume        = {27},
  pages         = {2014},
  url           = {http://depa.fquim.unam.mx/amyd/archivero/DormandPrince_19856.pdf},
  __markedentry = {[msfz751:]},
}

@Article{Dormand1980,
  author        = {Dormand, John R and Prince, Peter J},
  title         = {A family of embedded Runge-Kutta formulae},
  journal       = {Journal of computational and applied mathematics},
  year          = {1980},
  volume        = {6},
  number        = {1},
  month         = {mar},
  pages         = {19--26},
  doi           = {10.1016/0771-050x(80)90013-3},
  __markedentry = {[msfz751:6]},
  publisher     = {Elsevier},
}

@Article{soetaert2010solving,
  author  = {Soetaert, KER and Petzoldt, Thomas and Setzer, R Woodrow},
  title   = {Solving differential equations in R: package deSolve},
  journal = {Journal of Statistical Software},
  year    = {2010},
  volume  = {33},
}

@Article{Ashino2000,
  author    = {R. Ashino and M. Nagase and R. Vaillancourt},
  title     = {Behind and beyond the Matlab {ODE} suite},
  journal   = {Computers {\&} Mathematics with Applications},
  year      = {2000},
  volume    = {40},
  number    = {4-5},
  month     = {aug},
  pages     = {491--512},
  doi       = {10.1016/s0898-1221(00)00175-9},
  keywords  = {Stiff and nonstiff differential equations Implicit and explicit ODE solvers Matlab odedemo},
  publisher = {Elsevier {BV}},
}

@Article{Wang2015,
  author    = {W Wang and KM Hallow and DA James},
  title     = {A Tutorial on {RxODE}: Simulating Differential Equation Pharmacometric Models in R},
  journal   = {{CPT}: Pharmacometrics {\&} Systems Pharmacology},
  year      = {2015},
  volume    = {5},
  number    = {1},
  month     = {dec},
  pages     = {3--10},
  doi       = {10.1002/psp4.12052},
  publisher = {Wiley-Blackwell},
}

@Comment{jabref-meta: databaseType:biblatex;}
